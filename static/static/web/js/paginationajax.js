// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  $(function() {
    var curpage, disableEvents, navigate;
    curpage = 1;
    disableEvents = false;
    navigate = function(element, page, sort_data) {
      var ascsort, extravars, fname, fvalue, i, j, len, len1, lfilters, lfo, pgclass, ref, ref1, ref2, sortfield, source_url;
      pgclass = $(element).data('pgclass');
      if (!pgclass) {
        pgclass = $(element).closest('[data-pgclass]').data('pgclass');
      }
      if (pgclass) {
        pgclass = "." + pgclass + " ";
      }
      page = page || 1;
      lfilters = "";
      ref = $(pgclass + '.list-filter');
      for (i = 0, len = ref.length; i < len; i++) {
        lfo = ref[i];
        fname = $(lfo).attr('name');
        fvalue = $(lfo).val();
        if (fvalue && fvalue !== '-') {
          lfilters += "&filters[]=" + fname + "*" + fvalue;
        }
      }
      extravars = "";
      ref1 = $(pgclass + '.pagination-parameter');
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        lfo = ref1[j];
        fname = $(lfo).data('name');
        fvalue = $(lfo).data('value');
        if (fvalue !== '-') {
          extravars += "&" + fname + "=" + fvalue;
        }
      }
      sortfield = sort_data ? sort_data[0] : $(pgclass + '.pagination-sortfield').data('sortfield') || '';
      ascsort = sort_data ? sort_data[1] : $(pgclass + '.pagination-sortfield').data('asc');
      if ((ref2 = "" + ascsort) !== '0' && ref2 !== '1') {
        ascsort = "1";
      }
      $(pgclass + '.pagination-sortfield').data('asc', ascsort);
      $(pgclass + '.pagination-sortfield').data('sortfield', sortfield);
      source_url = $(pgclass + '.paginated_content').data('source-url');
      if (!source_url) {
        source_url = window.location.pathname;
      }
      $.ajax(source_url + "?&page=" + page + lfilters + ("&sort=" + sortfield + "&sortasc=" + ascsort) + extravars, {
        type: 'GET',
        dataType: 'html',
        success: function(data, textStatus, jqXHR) {
          var hhh;
          curpage = page;
          $(pgclass + '.paginated_content').html(data);
          hhh = $(pgclass + ("[data-sort=\"" + sortfield + "\"]")).addClass('sortfield').html();
          if (hhh) {
            if (("" + ascsort) === '1') {
              hhh = hhh.replace('</span></div>', ' <i class=" glyphicon glyphicon-sort-by-attributes"></i></span></div>');
              return $(pgclass + ("[data-sort='" + sortfield + "']")).addClass('sortasc').html(hhh);
            } else {
              hhh = hhh.replace('</span></div>', ' <i class=" glyphicon glyphicon-sort-by-attributes-alt"></i></span></div>');
              return $(pgclass + ("[data-sort='" + sortfield + "']")).addClass('sortdesc').html(hhh);
            }
          }
        },
        error: function(jqXHR, textStatus, error) {
          console.log(jqXHR);
          console.log(textStatus);
          return console.log(error);
        }
      });
      return false;
    };
    window.navigate = navigate;
    $(document).on('click', '.listnav', function() {
      var nextpage;
      nextpage = $(this).data('page');
      if (!nextpage) {
        return false;
      }
      return navigate(this, nextpage);
    });
    $(document).on('change', '.list-filter', function() {
      if (!disableEvents) {
        return navigate(this, 1);
      }
    });
    $(document).on('click', '.filter-reset', function() {
      var i, len, pgclass, ref, selobj;
      disableEvents = true;
      pgclass = $(this).closest('[data-pgclass]').data('pgclass');
      ref = $("." + pgclass + " .list-filter");
      for (i = 0, len = ref.length; i < len; i++) {
        selobj = ref[i];
        $(selobj).val('-').trigger('change');
      }
      disableEvents = false;
      return navigate(this, 1);
    });
    $(document).on('click', '[data-sort]', function() {
      var ascsort, mysortfield, pgclass, sortfield;
      pgclass = $(this).closest('[data-pgclass]').data('pgclass');
      sortfield = $("." + pgclass + " .pagination-sortfield").data('sortfield') || '';
      mysortfield = $(this).data('sort');
      ascsort = $("." + pgclass + " .pagination-sortfield").data('asc');
      if (sortfield === mysortfield) {
        ascsort = ascsort ^ 1;
      } else {
        ascsort = 1;
      }
      return navigate(this, null, [mysortfield, ascsort]);
    });
    $('.paginated_content').each(function() {
      return navigate(this, 1);
    });
    return $('.list-filter').select2({
      'width': '100%'
    });
  });

}).call(this);
